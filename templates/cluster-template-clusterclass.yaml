apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: nutanix-quick-start-kcfg-0
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            eviction-hard: nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<15%,memory.available<100Mi,imagefs.inodesFree<10%
            tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      postKubeadmCommands:
      - echo "after kubeadm call" > /var/log/postkubeadm.log
      preKubeadmCommands:
      - echo "before kubeadm call" > /var/log/prekubeadm.log
      - hostnamectl set-hostname "{{ ds.meta_data.hostname }}"
      verbosity: 10
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: nutanix-quick-start
spec:
  controlPlane:
    machineHealthCheck:
      maxUnhealthy: 40%
      nodeStartupTimeout: 10m
      unhealthyConditions:
      - status: "False"
        timeout: 300s
        type: Ready
      - status: Unknown
        timeout: 300s
        type: Ready
      - status: "True"
        timeout: 300s
        type: MemoryPressure
      - status: "True"
        timeout: 300s
        type: DiskPressure
      - status: "True"
        timeout: 300s
        type: PIDPressure
      - status: "True"
        timeout: 300s
        type: NetworkUnavailable
    machineInfrastructure:
      ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: NutanixMachineTemplate
        name: nutanix-quick-start-cp-nmt
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: nutanix-quick-start-kcpt
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: NutanixClusterTemplate
      name: nutanix-quick-start-nct
  patches:
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/kubeadmConfigSpec/users
        valueFrom:
          template: |
            - name: capxuser
              lockPassword: false
              sudo: ALL=(ALL) NOPASSWD:ALL
              sshAuthorizedKeys:
                - '{{ .sshKey }}'
      selector:
        apiVersion: controlplane.cluster.x-k8s.io/v1beta1
        kind: KubeadmControlPlaneTemplate
        matchResources:
          controlPlane: true
    - jsonPatches:
      - op: add
        path: /spec/template/spec/users
        valueFrom:
          template: |
            - name: capxuser
              lockPassword: false
              sudo: ALL=(ALL) NOPASSWD:ALL
              sshAuthorizedKeys:
                - '{{ .sshKey }}'
      selector:
        apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
        kind: KubeadmConfigTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - nutanix-quick-start-worker
    name: add-ssh-user
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/controlPlaneEndpoint
        valueFrom:
          template: |
            host: '{{ .controlPlaneEndpoint.IP }}'
            port: {{ .controlPlaneEndpoint.port }}
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: NutanixClusterTemplate
        matchResources:
          infrastructureCluster: true
    - jsonPatches:
      - op: add
        path: /spec/template/spec/kubeadmConfigSpec/preKubeadmCommands/-
        valueFrom:
          template: |
            sed -i 's/control_plane_endpoint_ip/{{ .controlPlaneEndpoint.IP }}/g' /etc/kubernetes/manifests/kube-vip.yaml
      - op: add
        path: /spec/template/spec/kubeadmConfigSpec/preKubeadmCommands/-
        valueFrom:
          template: |
            sed -i 's/control_plane_endpoint_port/{{ .controlPlaneEndpoint.port }}/g' /etc/kubernetes/manifests/kube-vip.yaml
      selector:
        apiVersion: controlplane.cluster.x-k8s.io/v1beta1
        kind: KubeadmControlPlaneTemplate
        matchResources:
          controlPlane: true
    name: update-control-plane-endpoint
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/prismCentral
        valueFrom:
          template: |
            address: '{{ .prismCentralEndpoint.address }}'
            port: {{ .prismCentralEndpoint.port }}
            insecure: {{ .prismCentralEndpoint.insecure }}
            credentialRef:
              name: '{{ .prismCentralEndpoint.credentialSecret }}'
              kind: Secret
            additionalTrustBundle:
              name: '{{ .prismCentralEndpoint.additionalTrustBundle }}'
              kind: ConfigMap
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: NutanixClusterTemplate
        matchResources:
          infrastructureCluster: true
    name: add-pc-endpoint-and-creds
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/bootType
        valueFrom:
          variable: controlPlaneMachineDetails.bootType
      - op: add
        path: /spec/template/spec/vcpusPerSocket
        valueFrom:
          variable: controlPlaneMachineDetails.vcpusPerSocket
      - op: add
        path: /spec/template/spec/memorySize
        valueFrom:
          variable: controlPlaneMachineDetails.memorySize
      - op: add
        path: /spec/template/spec/systemDiskSize
        valueFrom:
          variable: controlPlaneMachineDetails.systemDiskSize
      - op: add
        path: /spec/template/spec/image/name
        valueFrom:
          variable: controlPlaneMachineDetails.imageName
      - op: add
        path: /spec/template/spec/cluster/name
        valueFrom:
          variable: controlPlaneMachineDetails.clusterName
      - op: add
        path: /spec/template/spec/subnet
        valueFrom:
          template: |
            - type: name
              name: {{ .controlPlaneMachineDetails.subnetName }}
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: NutanixMachineTemplate
        matchResources:
          controlPlane: true
    name: update-control-plane-machine-template
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/bootType
        valueFrom:
          variable: workerMachineDetails.bootType
      - op: add
        path: /spec/template/spec/vcpusPerSocket
        valueFrom:
          variable: workerMachineDetails.vcpusPerSocket
      - op: add
        path: /spec/template/spec/memorySize
        valueFrom:
          variable: workerMachineDetails.memorySize
      - op: add
        path: /spec/template/spec/systemDiskSize
        valueFrom:
          variable: workerMachineDetails.systemDiskSize
      - op: add
        path: /spec/template/spec/image/name
        valueFrom:
          variable: workerMachineDetails.imageName
      - op: add
        path: /spec/template/spec/cluster/name
        valueFrom:
          variable: workerMachineDetails.clusterName
      - op: add
        path: /spec/template/spec/subnet
        valueFrom:
          template: |
            - type: name
              name: {{ .controlPlaneMachineDetails.subnetName }}
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: NutanixMachineTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - nutanix-quick-start-worker
    name: update-worker-machine-template
  - definitions:
    - jsonPatches:
      - op: replace
        path: /spec/template/spec/failureDomains
        valueFrom:
          variable: failureDomains
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: NutanixClusterTemplate
        matchResources:
          infrastructureCluster: true
    - jsonPatches:
      - op: remove
        path: /spec/template/spec/cluster
      - op: remove
        path: /spec/template/spec/subnet
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: NutanixMachineTemplate
        matchResources:
          controlPlane: true
    enabledIf: '{{if .failureDomains}}true{{end}}'
    name: add-failure-domains
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/project
        valueFrom:
          variable: project
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: NutanixMachineTemplate
        matchResources:
          controlPlane: true
    - jsonPatches:
      - op: add
        path: /spec/template/spec/project
        valueFrom:
          variable: project
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: NutanixMachineTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - nutanix-quick-start-worker
    enabledIf: '{{if .project}}true{{end}}'
    name: add-project
  variables:
  - name: sshKey
    required: true
    schema:
      openAPIV3Schema:
        description: Public key to SSH onto the cluster nodes.
        type: string
  - name: controlPlaneEndpoint
    required: true
    schema:
      openAPIV3Schema:
        properties:
          IP:
            type: string
          port:
            type: integer
        type: object
  - name: prismCentralEndpoint
    required: true
    schema:
      openAPIV3Schema:
        properties:
          additionalTrustBundle:
            type: string
          address:
            type: string
          credentialSecret:
            type: string
          insecure:
            type: boolean
          port:
            type: integer
        type: object
  - name: controlPlaneMachineDetails
    required: true
    schema:
      openAPIV3Schema:
        properties:
          bootType:
            type: string
          clusterName:
            type: string
          imageName:
            type: string
          memorySize:
            type: string
          subnetName:
            type: string
          systemDiskSize:
            type: string
          vcpuSockets:
            type: integer
          vcpusPerSocket:
            type: integer
        type: object
  - name: workerMachineDetails
    required: true
    schema:
      openAPIV3Schema:
        properties:
          bootType:
            type: string
          clusterName:
            type: string
          imageName:
            type: string
          memorySize:
            type: string
          subnetName:
            type: string
          systemDiskSize:
            type: string
          vcpuSockets:
            type: integer
          vcpusPerSocket:
            type: integer
        type: object
  - name: failureDomains
    required: false
    schema:
      openAPIV3Schema:
        items:
          properties:
            cluster:
              properties:
                name:
                  type: string
                type:
                  enum:
                  - name
                  - uuid
                  type: string
                uuid:
                  type: string
              type: object
            controlPlane:
              type: boolean
            name:
              type: string
            subnets:
              items:
                properties:
                  name:
                    type: string
                  type:
                    enum:
                    - name
                    - uuid
                    type: string
                  uuid:
                    type: string
                type: object
              type: array
          type: object
        type: array
  - name: project
    required: false
    schema:
      openAPIV3Schema:
        description: Prism Central project to deploy the cluster resources into.
        properties:
          name:
            type: string
          type:
            enum:
            - name
            - uuid
            type: string
          uuid:
            type: string
        type: object
  workers:
    machineDeployments:
    - class: nutanix-quick-start-worker
      machineHealthCheck:
        maxUnhealthy: 40%
        nodeStartupTimeout: 10m
        unhealthyConditions:
        - status: "False"
          timeout: 300s
          type: Ready
        - status: Unknown
          timeout: 300s
          type: Ready
        - status: "True"
          timeout: 300s
          type: MemoryPressure
        - status: "True"
          timeout: 300s
          type: DiskPressure
        - status: "True"
          timeout: 300s
          type: PIDPressure
        - status: "True"
          timeout: 300s
          type: NetworkUnavailable
      template:
        bootstrap:
          ref:
            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
            kind: KubeadmConfigTemplate
            name: nutanix-quick-start-kcfg-0
        infrastructure:
          ref:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: NutanixMachineTemplate
            name: nutanix-quick-start-md-nmt
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlaneTemplate
metadata:
  name: nutanix-quick-start-kcpt
spec:
  template:
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            certSANs:
            - localhost
            - 127.0.0.1
            - 0.0.0.0
            extraArgs:
              cloud-provider: external
              tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          controllerManager:
            extraArgs:
              cloud-provider: external
              tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          scheduler:
            extraArgs:
              tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        files:
        - content: |
            apiVersion: v1
            kind: Pod
            metadata:
              name: kube-vip
              namespace: kube-system
            spec:
              containers:
                - name: kube-vip
                  image: ghcr.io/kube-vip/kube-vip:v0.6.4
                  imagePullPolicy: IfNotPresent
                  args:
                    - manager
                  env:
                    - name: vip_arp
                      value: "true"
                    - name: address
                      value: "control_plane_endpoint_ip"
                    - name: port
                      value: "control_plane_endpoint_port"
                    - name: vip_cidr
                      value: "32"
                    - name: cp_enable
                      value: "true"
                    - name: cp_namespace
                      value: kube-system
                    - name: vip_ddns
                      value: "false"
                    - name: vip_leaderelection
                      value: "true"
                    - name: vip_leaseduration
                      value: "15"
                    - name: vip_renewdeadline
                      value: "10"
                    - name: vip_retryperiod
                      value: "2"
                    - name: svc_enable
                      value: "${KUBEVIP_SVC_ENABLE=false}"
                    - name: lb_enable
                      value: "${KUBEVIP_LB_ENABLE=false}"
                    - name: enableServicesElection
                      value: "${KUBEVIP_SVC_ELECTION=false}"
                  securityContext:
                    capabilities:
                      add:
                        - NET_ADMIN
                        - SYS_TIME
                        - NET_RAW
                  volumeMounts:
                    - mountPath: /etc/kubernetes/admin.conf
                      name: kubeconfig
                  resources: {}
              hostNetwork: true
              hostAliases:
                - hostnames:
                    - kubernetes
                  ip: 127.0.0.1
              volumes:
                - name: kubeconfig
                  hostPath:
                    type: FileOrCreate
                    path: /etc/kubernetes/admin.conf
            status: {}
          owner: root:root
          path: /etc/kubernetes/manifests/kube-vip.yaml
        initConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              cloud-provider: external
              eviction-hard: nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<15%,memory.available<100Mi,imagefs.inodesFree<10%
              tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        joinConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              cloud-provider: external
              eviction-hard: nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<15%,memory.available<100Mi,imagefs.inodesFree<10%
              tls-cipher-suites: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        postKubeadmCommands:
        - echo export KUBECONFIG=/etc/kubernetes/admin.conf >> /root/.bashrc
        - |
          KUBERNETES_VERSION_NO_V=${KUBERNETES_VERSION#v}
          VERSION_TO_COMPARE=1.29.0
          if [ "$(printf '%s\n' "$KUBERNETES_VERSION_NO_V" "$VERSION_TO_COMPARE" | sort -V | head -n1)" != "$KUBERNETES_VERSION_NO_V" ]; then
            if [ -f /run/kubeadm/kubeadm.yaml ]; then
              sed -i 's#path: /etc/kubernetes/super-admin.conf#path: /etc/kubernetes/admin.conf#' /etc/kubernetes/manifests/kube-vip.yaml;
            fi
          fi
        - echo "after kubeadm call" > /var/log/postkubeadm.log
        preKubeadmCommands:
        - echo "before kubeadm call" > /var/log/prekubeadm.log
        - hostnamectl set-hostname "{{ ds.meta_data.hostname }}"
        - echo "::1         ipv6-localhost ipv6-loopback" >/etc/hosts
        - echo "127.0.0.1   localhost" >>/etc/hosts
        - echo "127.0.0.1   kubernetes" >>/etc/hosts
        - echo "127.0.0.1   {{ ds.meta_data.hostname }}" >> /etc/hosts
        - |
          KUBERNETES_VERSION_NO_V=${KUBERNETES_VERSION#v}
          VERSION_TO_COMPARE=1.29.0
          if [ "$(printf '%s\n' "$KUBERNETES_VERSION_NO_V" "$VERSION_TO_COMPARE" | sort -V | head -n1)" != "$KUBERNETES_VERSION_NO_V" ]; then
            if [ -f /run/kubeadm/kubeadm.yaml ]; then
              sed -i 's#path: /etc/kubernetes/admin.conf#path: /etc/kubernetes/super-admin.conf#' /etc/kubernetes/manifests/kube-vip.yaml;
            fi
          fi
        useExperimentalRetryJoin: true
        verbosity: 10
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: NutanixClusterTemplate
metadata:
  name: nutanix-quick-start-nct
spec:
  template:
    spec:
      failureDomains: []
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: NutanixMachineTemplate
metadata:
  name: nutanix-quick-start-cp-nmt
spec:
  template:
    spec:
      bootType: legacy
      cluster:
        name: ""
        type: name
      image:
        name: ""
        type: name
      memorySize: 4Gi
      providerID: nutanix://vm-uuid
      subnet:
      - name: ""
        type: name
      systemDiskSize: 40Gi
      vcpuSockets: 2
      vcpusPerSocket: 1
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: NutanixMachineTemplate
metadata:
  name: nutanix-quick-start-md-nmt
spec:
  template:
    spec:
      bootType: legacy
      cluster:
        name: ""
        type: name
      image:
        name: ""
        type: name
      memorySize: 4Gi
      providerID: nutanix://vm-uuid
      subnet:
      - name: ""
        type: name
      systemDiskSize: 40Gi
      vcpuSockets: 2
      vcpusPerSocket: 1
