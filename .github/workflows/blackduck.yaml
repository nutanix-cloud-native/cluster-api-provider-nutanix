name: Black Duck Policy Check
on:
  schedule:
    - cron: "0 0 * * *" # Midnight
  push:
    branches:
      - main
      - 'release-*'
  pull_request:
  pull_request_target:
    branches:
      - main
      - 'release-*'

jobs:
  check_approvals:
    runs-on: ubuntu-latest
    # Run this job only if the following conditions are met:
    # 1. The pull request has the 'integration-test' label.
    # 2. The event is either:
    #   a. A 'pull_request' event where the base and head repositories are the same (internal PR).
    #   b. A 'pull_request_target' event where the base and head repositories are different (external PR).
    if: ${{ contains(github.event.pull_request.labels.*.name, 'integration-test') &&
      (( github.event_name == 'pull_request' && github.event.pull_request.base.repo.clone_url == github.event.pull_request.head.repo.clone_url) ||
      (github.event_name == 'pull_request_target' && github.event.pull_request.base.repo.clone_url != github.event.pull_request.head.repo.clone_url )) }}
    outputs:
      # Output the approval status for pull_request_target events, otherwise default to 'true'
      check_approvals: ${{ github.event_name == 'pull_request_target' && steps.check_approvals.outputs.check_approvals || 'true' }}
      # Output whether the PR is external
      external_pr: ${{ github.event.pull_request.base.repo.clone_url != github.event.pull_request.head.repo.clone_url }}
    steps:
      - name: Check integration test allowance status
        # Only run this step for pull_request_target events
        if: ${{ github.event_name == 'pull_request_target' }}
        id: check_approvals
        # Use an external action to check if the PR has the necessary approvals
        uses: nutanix-cloud-native/action-check-approvals@v1

  security:
    needs: check_approvals
    if: github.repository == 'nutanix-cloud-native/cluster-api-provider-nutanix'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install devbox
        uses: jetify-com/devbox-install-action@v0.12.0
        with:
          enable-cache: true

      - name: Go cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build Project
        run: devbox run -- make build

      - name: Black Duck Full Scan
        if: ${{ github.event_name != 'pull_request' }}
        uses: blackduck-inc/black-duck-security-scan@v2.1.1
        with:
          blackducksca_url: ${{ secrets.BLACKDUCK_URL }}
          blackducksca_token: ${{ secrets.BLACKDUCK_API_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          blackducksca_scan_full: true
          blackducksca_scan_failure_severities: 'BLOCKER,CRITICAL'

      - name: Black Duck PR Scan
        if: ${{ github.event_name == 'pull_request' }}
        uses: blackduck-inc/black-duck-security-scan@v2.1.1
        env:
          DETECT_PROJECT_VERSION_NAME: ${{ github.base_ref }}
        with:
          blackducksca_url: ${{ secrets.BLACKDUCK_URL }}
          blackducksca_token: ${{ secrets.BLACKDUCK_API_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          blackducksca_scan_full: false
          blackducksca_prComment_enabled: true
