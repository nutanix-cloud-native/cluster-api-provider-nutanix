---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: nutanixmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: NutanixMachineTemplate
    listKind: NutanixMachineTemplateList
    plural: nutanixmachinetemplates
    shortNames:
    - nmtmpl
    singular: nutanixmachinetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: NutanixMachineTemplate is the Schema for the nutanixmachinetemplates
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NutanixMachineTemplateSpec defines the desired state of NutanixMachineTemplate
            properties:
              template:
                description: NutanixMachineTemplateResource describes the data needed
                  to create a NutanixMachine from a template
                properties:
                  metadata:
                    description: |-
                      Standard object metadata.
                      Ref: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      additionalCategories:
                        description: List of categories that need to be added to the
                          machines. Categories must already exist in Prism Central
                        items:
                          properties:
                            key:
                              description: key is the Key of category in PC.
                              type: string
                            value:
                              description: value is the category value linked to the
                                category key in PC
                              type: string
                          type: object
                        type: array
                      bootType:
                        description: Defines the boot type of the virtual machine.
                          Only supports UEFI and Legacy
                        enum:
                        - legacy
                        - uefi
                        type: string
                      bootstrapRef:
                        description: |-
                          BootstrapRef is a reference to a bootstrap provider-specific resource
                          that holds configuration details.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: |-
                              If referring to a piece of an object instead of an entire object, this string
                              should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container within a pod, this would take on a value like:
                              "spec.containers{name}" (where "name" refers to the name of the container that triggered
                              the event) or if no container name is specified "spec.containers[2]" (container with
                              index 2 in this pod). This syntax is chosen only to have some well-defined way of
                              referencing a part of an object.
                              TODO: this design is not final and this field is subject to change in the future.
                            type: string
                          kind:
                            description: |-
                              Kind of the referent.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            type: string
                          resourceVersion:
                            description: |-
                              Specific resourceVersion to which this reference is made, if any.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                            type: string
                          uid:
                            description: |-
                              UID of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      cluster:
                        description: |-
                          cluster is to identify the cluster (the Prism Element under management
                          of the Prism Central), in which the Machine's VM will be created.
                          The cluster identifier (uuid or name) can be obtained from the Prism Central console
                          or using the prism_central API.
                        properties:
                          name:
                            description: name is the resource name in the PC
                            type: string
                          type:
                            description: Type is the identifier type to use for this
                              resource.
                            enum:
                            - uuid
                            - name
                            type: string
                          uuid:
                            description: uuid is the UUID of the resource in the PC.
                            type: string
                        required:
                        - type
                        type: object
                      dataDisks:
                        description: dataDisks hold the list of data disks to be attached
                          to the VM
                        items:
                          description: NutanixMachineVMDisk defines the disk configuration
                            for a NutanixMachine
                          properties:
                            dataSource:
                              description: dataSource refers to a data source image
                                for the VM disk.
                              properties:
                                name:
                                  description: name is the resource name in the PC
                                  type: string
                                type:
                                  description: Type is the identifier type to use
                                    for this resource.
                                  enum:
                                  - uuid
                                  - name
                                  type: string
                                uuid:
                                  description: uuid is the UUID of the resource in
                                    the PC.
                                  type: string
                              required:
                              - type
                              type: object
                            deviceProperties:
                              description: deviceProperties are the properties of
                                the disk device.
                              properties:
                                adapterType:
                                  description: |-
                                    adapterType is the adapter type of the disk address.
                                    If the deviceType is "Disk", the valid adapterType can be "SCSI", "IDE", "PCI", "SATA" or "SPAPR".
                                    If the deviceType is "CDRom", the valid adapterType can be "IDE" or "SATA".
                                  enum:
                                  - SCSI
                                  - IDE
                                  - PCI
                                  - SATA
                                  - SPAPR
                                  type: string
                                deviceIndex:
                                  default: 0
                                  description: |-
                                    deviceIndex is the index of the disk address. The valid values are non-negative integers, with the default value 0.
                                    For a Machine VM, the deviceIndex for the disks with the same deviceType.adapterType combination should
                                    start from 0 and increase consecutively afterwards. Note that for each Machine VM, the Disk.SCSI.0
                                    and CDRom.IDE.0 are reserved to be used by the VM's system. So for dataDisks of Disk.SCSI and CDRom.IDE,
                                    the deviceIndex should start from 1.
                                  format: int32
                                  minimum: 0
                                  type: integer
                                deviceType:
                                  default: Disk
                                  description: |-
                                    deviceType specifies the disk device type.
                                    The valid values are "Disk" and "CDRom", and the default is "Disk".
                                  enum:
                                  - Disk
                                  - CDRom
                                  type: string
                              required:
                              - deviceType
                              type: object
                            diskSize:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                diskSize is the size (in Quantity format) of the disk attached to the VM.
                                See https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Format for the Quantity format and example documentation.
                                The minimum diskSize is 1GB.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            storageConfig:
                              description: storageConfig are the storage configuration
                                parameters of the VM disks.
                              properties:
                                diskMode:
                                  default: Standard
                                  description: |-
                                    diskMode specifies the disk mode.
                                    The valid values are Standard and Flash, and the default is Standard.
                                  enum:
                                  - Standard
                                  - Flash
                                  type: string
                                storageContainer:
                                  description: storageContainer refers to the storage_container
                                    used by the VM disk.
                                  properties:
                                    name:
                                      description: name is the resource name in the
                                        PC
                                      type: string
                                    type:
                                      description: Type is the identifier type to
                                        use for this resource.
                                      enum:
                                      - uuid
                                      - name
                                      type: string
                                    uuid:
                                      description: uuid is the UUID of the resource
                                        in the PC.
                                      type: string
                                  required:
                                  - type
                                  type: object
                              required:
                              - diskMode
                              type: object
                          required:
                          - diskSize
                          type: object
                        type: array
                      gpus:
                        description: List of GPU devices that need to be added to
                          the machines.
                        items:
                          properties:
                            deviceID:
                              description: deviceID is the id of the GPU entity.
                              format: int64
                              type: integer
                            name:
                              description: name is the GPU name
                              type: string
                            type:
                              description: Type is the identifier type to use for
                                this resource.
                              enum:
                              - deviceID
                              - name
                              type: string
                          required:
                          - type
                          type: object
                        type: array
                      image:
                        description: |-
                          image is to identify the nutanix machine image uploaded to the Prism Central (PC)
                          The image identifier (uuid or name) can be obtained from the Prism Central console
                          or using the prism_central API.
                        properties:
                          name:
                            description: name is the resource name in the PC
                            type: string
                          type:
                            description: Type is the identifier type to use for this
                              resource.
                            enum:
                            - uuid
                            - name
                            type: string
                          uuid:
                            description: uuid is the UUID of the resource in the PC.
                            type: string
                        required:
                        - type
                        type: object
                      imageLookup:
                        description: imageLookup is a container that holds how to
                          look up rhcos images for the cluster.
                        properties:
                          baseOS:
                            description: |-
                              BaseOS is the name of the base operating system to use for
                              image lookup.
                            minLength: 1
                            type: string
                          format:
                            default: capx-{{.BaseOS}}-{{.K8sVersion}}-*
                            description: |-
                              Format is the naming format to look up the image for this
                              machine It will be ignored if an explicit image is set. Supports
                              substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
                              kubernetes version, respectively. The BaseOS will be the value in
                              BaseOS and the K8sVersion is the value in the Machine .spec.version, with the v prefix removed.
                              This is effectively the defined by the packages produced by kubernetes/release without v as a
                              prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                              image format of {{.BaseOS}}-?{{.K8sVersion}}-* and BaseOS as "rhel-8.10" will end up
                              searching for images that match the pattern rhel-8.10-1.30.5-* for a
                              Machine that is targeting kubernetes v1.30.5. See
                              also: https://golang.org/pkg/text/template/
                            type: string
                        required:
                        - baseOS
                        type: object
                      memorySize:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          memorySize is the memory size (in Quantity format) of the VM
                          The minimum memorySize is 2Gi bytes
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      project:
                        description: Add the machine resources to a Prism Central
                          project
                        properties:
                          name:
                            description: name is the resource name in the PC
                            type: string
                          type:
                            description: Type is the identifier type to use for this
                              resource.
                            enum:
                            - uuid
                            - name
                            type: string
                          uuid:
                            description: uuid is the UUID of the resource in the PC.
                            type: string
                        required:
                        - type
                        type: object
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      subnet:
                        description: |-
                          subnet is to identify the cluster's network subnet to use for the Machine's VM
                          The cluster identifier (uuid or name) can be obtained from the Prism Central console
                          or using the prism_central API.
                        items:
                          description: NutanixResourceIdentifier holds the identity
                            of a Nutanix PC resource (cluster, image, subnet, etc.)
                          properties:
                            name:
                              description: name is the resource name in the PC
                              type: string
                            type:
                              description: Type is the identifier type to use for
                                this resource.
                              enum:
                              - uuid
                              - name
                              type: string
                            uuid:
                              description: uuid is the UUID of the resource in the
                                PC.
                              type: string
                          required:
                          - type
                          type: object
                        type: array
                      systemDiskSize:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          systemDiskSize is size (in Quantity format) of the system disk of the VM
                          The minimum systemDiskSize is 20Gi bytes
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      vcpuSockets:
                        description: vcpuSockets is the number of vCPU sockets of
                          the VM
                        format: int32
                        minimum: 1
                        type: integer
                      vcpusPerSocket:
                        description: vcpusPerSocket is the number of vCPUs per socket
                          of the VM
                        format: int32
                        minimum: 1
                        type: integer
                      vmPlacement:
                        description: VMPlacement defines placement options for the
                          VM
                        properties:
                          antiAffinityPolicyName:
                            description: AntiAffinityPolicyName is the name of the
                              VMAntiAffinityPolicy to be applied to this VM
                            type: string
                        type: object
                    required:
                    - memorySize
                    - systemDiskSize
                    - vcpuSockets
                    - vcpusPerSocket
                    type: object
                    x-kubernetes-validations:
                    - message: Either 'image' or 'imageLookup' must be set, but not
                        both
                      rule: has(self.image) != has(self.imageLookup)
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
