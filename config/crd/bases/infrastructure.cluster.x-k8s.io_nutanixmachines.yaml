---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: nutanixmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: NutanixMachine
    listKind: NutanixMachineList
    plural: nutanixmachines
    shortNames:
    - nma
    singular: nutanixmachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The VM address
      jsonPath: .status.addresses[0].address
      name: Address
      type: string
    - description: NutanixMachine ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: NutanixMachine instance ID
      jsonPath: .spec.providerID
      name: ProviderID
      type: string
    - description: NutanixMachine FailureDomain
      jsonPath: .status.failureDomain
      name: FailureDomain
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: NutanixMachine is the Schema for the nutanixmachines API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NutanixMachineSpec defines the desired state of NutanixMachine
            properties:
              additionalCategories:
                description: List of categories that need to be added to the machines.
                  Categories must already exist in Prism Central
                items:
                  properties:
                    key:
                      description: key is the Key of category in PC.
                      type: string
                    value:
                      description: value is the category value linked to the category
                        key in PC
                      type: string
                  type: object
                type: array
              bootType:
                description: Defines the boot type of the virtual machine. Only supports
                  UEFI and Legacy
                enum:
                - legacy
                - uefi
                type: string
              bootstrapRef:
                description: |-
                  BootstrapRef is a reference to a bootstrap provider-specific resource
                  that holds configuration details.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              cluster:
                description: |-
                  cluster is to identify the cluster (the Prism Element under management
                  of the Prism Central), in which the Machine's VM will be created.
                  The cluster identifier (uuid or name) can be obtained from the Prism Central console
                  or using the prism_central API.
                properties:
                  name:
                    description: name is the resource name in the PC
                    type: string
                  type:
                    description: Type is the identifier type to use for this resource.
                    enum:
                    - uuid
                    - name
                    type: string
                  uuid:
                    description: uuid is the UUID of the resource in the PC.
                    maxLength: 36
                    minLength: 36
                    type: string
                required:
                - type
                type: object
                x-kubernetes-validations:
                - message: '''name'' must be set and non-empty when type is ''name'',
                    and forbidden otherwise'
                  rule: 'self.type == ''name'' ? (has(self.name) && size(self.name)
                    > 0) : !has(self.name)'
                - message: '''uuid'' configuration is required when type is ''uuid'',
                    and forbidden otherwise'
                  rule: 'self.type == ''uuid'' ? has(self.uuid) && self.uuid.contains(''-'')
                    : !has(self.uuid)'
              dataDisks:
                description: dataDisks hold the list of data disks to be attached
                  to the VM
                items:
                  description: NutanixMachineVMDisk defines the disk configuration
                    for a NutanixMachine
                  properties:
                    dataSource:
                      description: dataSource refers to a data source image for the
                        VM disk.
                      properties:
                        name:
                          description: name is the resource name in the PC
                          type: string
                        type:
                          description: Type is the identifier type to use for this
                            resource.
                          enum:
                          - uuid
                          - name
                          type: string
                        uuid:
                          description: uuid is the UUID of the resource in the PC.
                          maxLength: 36
                          minLength: 36
                          type: string
                      required:
                      - type
                      type: object
                      x-kubernetes-validations:
                      - message: '''name'' must be set and non-empty when type is
                          ''name'', and forbidden otherwise'
                        rule: 'self.type == ''name'' ? (has(self.name) && size(self.name)
                          > 0) : !has(self.name)'
                      - message: '''uuid'' configuration is required when type is
                          ''uuid'', and forbidden otherwise'
                        rule: 'self.type == ''uuid'' ? has(self.uuid) && self.uuid.contains(''-'')
                          : !has(self.uuid)'
                    deviceProperties:
                      description: deviceProperties are the properties of the disk
                        device.
                      properties:
                        adapterType:
                          description: |-
                            adapterType is the adapter type of the disk address.
                            If the deviceType is "Disk", the valid adapterType can be "SCSI", "IDE", "PCI", "SATA" or "SPAPR".
                            If the deviceType is "CDRom", the valid adapterType can be "IDE" or "SATA".
                          enum:
                          - SCSI
                          - IDE
                          - PCI
                          - SATA
                          - SPAPR
                          type: string
                        deviceIndex:
                          default: 0
                          description: |-
                            deviceIndex is the index of the disk address. The valid values are non-negative integers, with the default value 0.
                            For a Machine VM, the deviceIndex for the disks with the same deviceType.adapterType combination should
                            start from 0 and increase consecutively afterwards. Note that for each Machine VM, the Disk.SCSI.0
                            and CDRom.IDE.0 are reserved to be used by the VM's system. So for dataDisks of Disk.SCSI and CDRom.IDE,
                            the deviceIndex should start from 1.
                          format: int32
                          minimum: 0
                          type: integer
                        deviceType:
                          default: Disk
                          description: |-
                            deviceType specifies the disk device type.
                            The valid values are "Disk" and "CDRom", and the default is "Disk".
                          enum:
                          - Disk
                          - CDRom
                          type: string
                      required:
                      - adapterType
                      - deviceType
                      type: object
                    diskSize:
                      anyOf:
                      - type: integer
                      - type: string
                      description: |-
                        diskSize is the size (in Quantity format) of the disk attached to the VM.
                        See https://pkg.go.dev/k8s.io/apimachinery/pkg/api/resource#Format for the Quantity format and example documentation.
                        The minimum diskSize is 1GB.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    storageConfig:
                      description: storageConfig are the storage configuration parameters
                        of the VM disks.
                      properties:
                        diskMode:
                          default: Standard
                          description: |-
                            diskMode specifies the disk mode.
                            The valid values are Standard and Flash, and the default is Standard.
                          enum:
                          - Standard
                          - Flash
                          type: string
                        storageContainer:
                          description: storageContainer refers to the storage_container
                            used by the VM disk.
                          properties:
                            name:
                              description: name is the resource name in the PC
                              type: string
                            type:
                              description: Type is the identifier type to use for
                                this resource.
                              enum:
                              - uuid
                              - name
                              type: string
                            uuid:
                              description: uuid is the UUID of the resource in the
                                PC.
                              maxLength: 36
                              minLength: 36
                              type: string
                          required:
                          - type
                          type: object
                          x-kubernetes-validations:
                          - message: '''name'' must be set and non-empty when type
                              is ''name'', and forbidden otherwise'
                            rule: 'self.type == ''name'' ? (has(self.name) && size(self.name)
                              > 0) : !has(self.name)'
                          - message: '''uuid'' configuration is required when type
                              is ''uuid'', and forbidden otherwise'
                            rule: 'self.type == ''uuid'' ? has(self.uuid) && self.uuid.contains(''-'')
                              : !has(self.uuid)'
                      required:
                      - diskMode
                      type: object
                  required:
                  - diskSize
                  type: object
                type: array
              gpus:
                description: List of GPU devices that need to be added to the machines.
                items:
                  properties:
                    deviceID:
                      description: deviceID is the id of the GPU entity.
                      format: int64
                      type: integer
                    name:
                      description: name is the GPU name
                      type: string
                    type:
                      description: Type is the identifier type to use for this resource.
                      enum:
                      - deviceID
                      - name
                      type: string
                  required:
                  - type
                  type: object
                type: array
              image:
                description: |-
                  image is to identify the nutanix machine image uploaded to the Prism Central (PC)
                  The image identifier (uuid or name) can be obtained from the Prism Central console
                  or using the prism_central API.
                properties:
                  name:
                    description: name is the resource name in the PC
                    type: string
                  type:
                    description: Type is the identifier type to use for this resource.
                    enum:
                    - uuid
                    - name
                    type: string
                  uuid:
                    description: uuid is the UUID of the resource in the PC.
                    maxLength: 36
                    minLength: 36
                    type: string
                required:
                - type
                type: object
                x-kubernetes-validations:
                - message: '''name'' must be set and non-empty when type is ''name'',
                    and forbidden otherwise'
                  rule: 'self.type == ''name'' ? (has(self.name) && size(self.name)
                    > 0) : !has(self.name)'
                - message: '''uuid'' configuration is required when type is ''uuid'',
                    and forbidden otherwise'
                  rule: 'self.type == ''uuid'' ? has(self.uuid) && self.uuid.contains(''-'')
                    : !has(self.uuid)'
              imageLookup:
                description: imageLookup is a container that holds how to look up
                  rhcos images for the cluster.
                properties:
                  baseOS:
                    description: |-
                      BaseOS is the name of the base operating system to use for
                      image lookup.
                    minLength: 1
                    type: string
                  format:
                    default: capx-{{.BaseOS}}-{{.K8sVersion}}-*
                    description: |-
                      Format is the naming format to look up the image for this
                      machine It will be ignored if an explicit image is set. Supports
                      substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
                      kubernetes version, respectively. The BaseOS will be the value in
                      BaseOS and the K8sVersion is the value in the Machine .spec.version, with the v prefix removed.
                      This is effectively the defined by the packages produced by kubernetes/release without v as a
                      prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                      image format of {{.BaseOS}}-?{{.K8sVersion}}-* and BaseOS as "rhel-8.10" will end up
                      searching for images that match the pattern rhel-8.10-1.30.5-* for a
                      Machine that is targeting kubernetes v1.30.5. See
                      also: https://golang.org/pkg/text/template/
                    type: string
                required:
                - baseOS
                type: object
              memorySize:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  memorySize is the memory size (in Quantity format) of the VM
                  The minimum memorySize is 2Gi bytes
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              project:
                description: Add the machine resources to a Prism Central project
                properties:
                  name:
                    description: name is the resource name in the PC
                    type: string
                  type:
                    description: Type is the identifier type to use for this resource.
                    enum:
                    - uuid
                    - name
                    type: string
                  uuid:
                    description: uuid is the UUID of the resource in the PC.
                    maxLength: 36
                    minLength: 36
                    type: string
                required:
                - type
                type: object
                x-kubernetes-validations:
                - message: '''name'' must be set and non-empty when type is ''name'',
                    and forbidden otherwise'
                  rule: 'self.type == ''name'' ? (has(self.name) && size(self.name)
                    > 0) : !has(self.name)'
                - message: '''uuid'' configuration is required when type is ''uuid'',
                    and forbidden otherwise'
                  rule: 'self.type == ''uuid'' ? has(self.uuid) && self.uuid.contains(''-'')
                    : !has(self.uuid)'
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              subnet:
                description: |-
                  subnet is to identify the cluster's network subnet to use for the Machine's VM
                  The cluster identifier (uuid or name) can be obtained from the Prism Central console
                  or using the prism_central API.
                items:
                  description: NutanixResourceIdentifier holds the identity of a Nutanix
                    PC resource (cluster, image, subnet, etc.)
                  properties:
                    name:
                      description: name is the resource name in the PC
                      type: string
                    type:
                      description: Type is the identifier type to use for this resource.
                      enum:
                      - uuid
                      - name
                      type: string
                    uuid:
                      description: uuid is the UUID of the resource in the PC.
                      maxLength: 36
                      minLength: 36
                      type: string
                  required:
                  - type
                  type: object
                  x-kubernetes-validations:
                  - message: '''name'' must be set and non-empty when type is ''name'',
                      and forbidden otherwise'
                    rule: 'self.type == ''name'' ? (has(self.name) && size(self.name)
                      > 0) : !has(self.name)'
                  - message: '''uuid'' configuration is required when type is ''uuid'',
                      and forbidden otherwise'
                    rule: 'self.type == ''uuid'' ? has(self.uuid) && self.uuid.contains(''-'')
                      : !has(self.uuid)'
                type: array
              systemDiskSize:
                anyOf:
                - type: integer
                - type: string
                description: |-
                  systemDiskSize is size (in Quantity format) of the system disk of the VM
                  The minimum systemDiskSize is 20Gi bytes
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              vcpuSockets:
                description: vcpuSockets is the number of vCPU sockets of the VM
                format: int32
                minimum: 1
                type: integer
              vcpusPerSocket:
                description: vcpusPerSocket is the number of vCPUs per socket of the
                  VM
                format: int32
                minimum: 1
                type: integer
            required:
            - memorySize
            - systemDiskSize
            - vcpuSockets
            - vcpusPerSocket
            type: object
            x-kubernetes-validations:
            - message: Either 'image' or 'imageLookup' must be set, but not both
              rule: has(self.image) != has(self.imageLookup)
          status:
            description: NutanixMachineStatus defines the observed state of NutanixMachine
            properties:
              addresses:
                description: |-
                  Addresses contains the Nutanix VM associated addresses.
                  Address type is one of Hostname, ExternalIP, InternalIP, ExternalDNS, InternalDNS
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: address is the machine address.
                      maxLength: 256
                      minLength: 1
                      type: string
                    type:
                      description: type is the machine address type, one of Hostname,
                        ExternalIP, InternalIP, ExternalDNS or InternalDNS.
                      enum:
                      - Hostname
                      - ExternalIP
                      - InternalIP
                      - ExternalDNS
                      - InternalDNS
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the NutanixMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      maxLength: 10240
                      minLength: 1
                      type: string
                    reason:
                      description: |-
                        reason is the reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      maxLength: 256
                      minLength: 1
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      maxLength: 32
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureDomain:
                description: failureDomain is the name of the failure domain where
                  this Machine has been placed in.
                type: string
              failureMessage:
                description: Will be set in case of failure of Machine instance
                type: string
              failureReason:
                description: Will be set in case of failure of Machine instance
                type: string
              nodeRef:
                description: |-
                  NodeRef is a reference to the corresponding workload cluster Node if it exists.
                  Deprecated: Do not use. Will be removed in a future release.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              vmUUID:
                description: The Nutanix VM's UUID
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
